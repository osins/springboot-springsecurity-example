/*
 * This file is generated by jOOQ.
 */
package com.siyuo2o.glass.db.album.tables;


import com.siyuo2o.glass.db.album.Album;
import com.siyuo2o.glass.db.album.Indexes;
import com.siyuo2o.glass.db.album.Keys;
import com.siyuo2o.glass.db.album.tables.records.SysUserRoleRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysUserRole extends TableImpl<SysUserRoleRecord> {

    private static final long serialVersionUID = 823382461;

    /**
     * The reference instance of <code>album.sys_user_role</code>
     */
    public static final SysUserRole SYS_USER_ROLE = new SysUserRole();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SysUserRoleRecord> getRecordType() {
        return SysUserRoleRecord.class;
    }

    /**
     * The column <code>album.sys_user_role.uid</code>.
     */
    public final TableField<SysUserRoleRecord, Integer> UID = createField("uid", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>album.sys_user_role.role_id</code>.
     */
    public final TableField<SysUserRoleRecord, Integer> ROLE_ID = createField("role_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>album.sys_user_role</code> table reference
     */
    public SysUserRole() {
        this(DSL.name("sys_user_role"), null);
    }

    /**
     * Create an aliased <code>album.sys_user_role</code> table reference
     */
    public SysUserRole(String alias) {
        this(DSL.name(alias), SYS_USER_ROLE);
    }

    /**
     * Create an aliased <code>album.sys_user_role</code> table reference
     */
    public SysUserRole(Name alias) {
        this(alias, SYS_USER_ROLE);
    }

    private SysUserRole(Name alias, Table<SysUserRoleRecord> aliased) {
        this(alias, aliased, null);
    }

    private SysUserRole(Name alias, Table<SysUserRoleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> SysUserRole(Table<O> child, ForeignKey<O, SysUserRoleRecord> key) {
        super(child, key, SYS_USER_ROLE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Album.ALBUM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SYS_USER_ROLE_FKGKMYSLKRFEYN9UKMOLVEK8B8F, Indexes.SYS_USER_ROLE_FKHH52N8VD4NY9FF4X9FB8V65QX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<SysUserRoleRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<SysUserRoleRecord, ?>>asList(Keys.FK265KTP12FYG5P1I1H4FS5XI4W, Keys.FKGKMYSLKRFEYN9UKMOLVEK8B8F, Keys.FKHH52N8VD4NY9FF4X9FB8V65QX);
    }

    public User user() {
        return new User(this, Keys.FK265KTP12FYG5P1I1H4FS5XI4W);
    }

    public UserInfo userInfo() {
        return new UserInfo(this, Keys.FKGKMYSLKRFEYN9UKMOLVEK8B8F);
    }

    public SysRole sysRole() {
        return new SysRole(this, Keys.FKHH52N8VD4NY9FF4X9FB8V65QX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysUserRole as(String alias) {
        return new SysUserRole(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysUserRole as(Name alias) {
        return new SysUserRole(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SysUserRole rename(String name) {
        return new SysUserRole(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SysUserRole rename(Name name) {
        return new SysUserRole(name, null);
    }
}
